{"version":3,"sources":["game/models/vince.ts"],"names":["game_object_1","require","laser_module_1","velocity_module_1","physics_module_1","Vince","_super","call","this","RADIUS","x","y","addModule","default","PhysicsModule","__extends","prototype","render","ctx","undefined","velocityModule","getModule","strokeStyle","lineWidth","fillStyle","beginPath","arc","Math","PI","fill","stroke","closePath","cos","angle","sin","getBodyDefinition","bodyDef","PhysicsType2d","Dynamics","BodyDefinition","type","BodyType","DYNAMIC","position","Vector2","getFixtures","fd","FixtureDefinition","shape","Collision","Shapes","CircleShape","m_radius","m_p","density","friction","Object","defineProperty","exports","value"],"mappings":"AAAA,sNAEAA,cAAAC,QAAuB,mCAEvBC,eAAAD,QAA2B,2BAC3BE,kBAAAF,QAA2B,wCAC3BG,iBAAAH,QAAqD,uCAErDI,MAAA,SAAAC,GAKE,QAAAD,KACEC,EAAAC,KAAAC,MAJOA,KAAAC,OAAS,GAMhBD,KAAKE,EAAI,IACTF,KAAKG,EAAI,IAETH,KAAKI,UAAU,GAAIV,gBAAAW,QAAe,QAAS,IAAM,MACjDL,KAAKI,UAAU,GAAIR,kBAAAU,cAAcN,OA+CrC,MA3DmCO,WAAAV,EAAAC,GAejCD,EAAAW,UAAAC,OAAA,SAAOC,GAEsBC,QAAvBX,KAAKY,iBACTZ,KAAKY,eAAiBZ,KAAKa,UAAUlB,kBAAAU,UAErCK,EAAII,YAAc,OAClBJ,EAAIK,UAAY,EAChBL,EAAIM,UAAY,OAEhBN,EAAIO,YACJP,EAAIQ,IAAIlB,KAAKE,EAAGF,KAAKG,EAAGH,KAAKC,OAAQ,EAAG,EAAIkB,KAAKC,IACjDV,EAAIW,OACJX,EAAIY,SACJZ,EAAIa,YAEJb,EAAIO,WACJ,IAAIf,GAAIF,KAAKE,EAAI,GAAKiB,KAAKK,IAAIxB,KAAKY,eAAea,OAC/CtB,EAAIH,KAAKG,EAAI,GAAKgB,KAAKO,IAAI1B,KAAKY,eAAea,MACnDf,GAAIM,UAAY,OAChBN,EAAIK,UAAY,EAChBL,EAAIQ,IAAIhB,EAAGC,EAAGH,KAAKC,OAAS,EAAG,EAAG,EAAIkB,KAAKC,IAE3CV,EAAIY,SACJZ,EAAIW,OACJX,EAAIa,aAGN1B,EAAAW,UAAAmB,kBAAA,WACE,GAAIC,GAAU,GAAIC,eAAcC,SAASC,cAGzC,OAFAH,GAAQI,KAAOH,cAAcC,SAASG,SAASC,QAC/CN,EAAQO,SAAW,GAAIN,eAAcO,QAAQpC,KAAKE,EAAGF,KAAKG,GACnDyB,GAGT/B,EAAAW,UAAA6B,YAAA,WACE,GAAIC,GAAK,GAAIT,eAAcC,SAASS,kBAChCC,EAAQ,GAAIX,eAAcY,UAAUC,OAAOC,WAM/C,OALAH,GAAMI,SAAW5C,KAAKC,OACtBuC,EAAMK,IAAM,GAAIhB,eAAcO,QAAQpC,KAAKE,EAAIF,KAAKC,OAAQD,KAAMG,EAAIH,KAAKC,QAC3EqC,EAAGE,MAAQA,EACXF,EAAGQ,QAAU,EACbR,EAAGS,SAAW,IACNT,IAEZzC,GA3DmCL,cAAAa,QAAnC2C,QAAAC,eAAAC,QAAA,cAAAC,OAAA","file":"vince.js","sourcesContent":["'use strict';\n\nimport GameObject from '../../engine/models/game-object';\nimport NumberTools from '../../engine/util/number-tools';\nimport LaserGunModule from '../modules/laser-module';\nimport VelocityModule from '../../engine/modules/velocity-module';\nimport { PhysicsModule, BodyDefinitionFactory } from '../../engine/modules/physics-module'\n\nexport default class Vince extends GameObject implements BodyDefinitionFactory {\n \n  readonly RADIUS = 50;\n  private velocityModule: VelocityModule;\n\n  constructor() {\n    super();\n\n    this.x = 100;\n    this.y = 100;\n\n    this.addModule(new LaserGunModule(\"Space\", 5000, 750));\n    this.addModule(new PhysicsModule(this));\n  }\n\n  render(ctx: CanvasRenderingContext2D) {\n    \n    if (this.velocityModule == undefined) \n    this.velocityModule = this.getModule(VelocityModule) as VelocityModule;\n  \n    ctx.strokeStyle = \"#000\";\n    ctx.lineWidth = 4;\n    ctx.fillStyle = '#0F0';\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.RADIUS, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    let x = this.x + 15 * Math.cos(this.velocityModule.angle);\n    let y = this.y + 15 * Math.sin(this.velocityModule.angle);\n    ctx.fillStyle = \"#30F\"\n    ctx.lineWidth = 2;\n    ctx.arc(x, y, this.RADIUS / 2, 0, 2 * Math.PI);\n\n    ctx.stroke();\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  getBodyDefinition(): PhysicsType2d.Dynamics.BodyDefinition {\n    let bodyDef = new PhysicsType2d.Dynamics.BodyDefinition();\n    bodyDef.type = PhysicsType2d.Dynamics.BodyType.DYNAMIC;\n    bodyDef.position = new PhysicsType2d.Vector2(this.x, this.y);\n    return bodyDef;\n  }\n\n  getFixtures(): Array<PhysicsType2d.Dynamics.FixtureDefinition> {\n    let fd = new PhysicsType2d.Dynamics.FixtureDefinition();\n    let shape = new PhysicsType2d.Collision.Shapes.CircleShape();\n    shape.m_radius = this.RADIUS;\n    shape.m_p = new PhysicsType2d.Vector2(this.x + this.RADIUS, this. y + this.RADIUS);\n    fd.shape = shape;\n    fd.density = 1.0;\n    fd.friction = 0.3;\n    return [fd];\n  }\n}"]}