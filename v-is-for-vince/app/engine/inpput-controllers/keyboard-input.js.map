{"version":3,"sources":["engine/inpput-controllers/keyboard-input.ts"],"names":["array_utils_1","require","KeyboardController","this","mappings","downKeys","hasDownHandler","hasUpHandler","hasWhileDownHandler","hasPressHandler","prototype","bind","window","addEventListener","keyDown","keyUp","keyPress","event","default","addToSet","key","remove","forEach","mapping","handlePress","update","attachKeyboardMapping","push","removeKeyboardMapping","Object","defineProperty","exports","value"],"mappings":"YACA,IAAAA,eAAAC,QAAuB,yBAEvBC,mBAAA,WAAA,QAAAA,KAEUC,KAAAC,YACAD,KAAAE,YACAF,KAAAG,gBAA0B,EAC1BH,KAAAI,cAAwB,EACxBJ,KAAAK,qBAA+B,EAC/BL,KAAAM,iBAA2B,EAkCrC,MAhCEP,GAAAQ,UAAAC,KAAA,WACEC,OAAOC,iBAAiB,UAAWV,KAAKW,SACxCF,OAAOC,iBAAiB,QAASV,KAAKY,OACtCH,OAAOC,iBAAiB,WAAYV,KAAKa,WAG3Cd,EAAAQ,UAAAI,QAAA,SAAQG,GACNjB,cAAAkB,QAAWC,SAASF,EAAMG,IAAKjB,KAAKE,WAGtCH,EAAAQ,UAAAK,MAAA,SAAME,GACJjB,cAAAkB,QAAWG,OAAOJ,EAAMG,IAAKjB,KAAKE,WAGpCH,EAAAQ,UAAAM,SAAA,SAASC,GACPd,KAAKC,SAASkB,QAAQ,SAACC,GACrBA,EAAQC,YAAYP,EAAMG,QAI9BlB,EAAAQ,UAAAe,OAAA,aAIAvB,EAAAQ,UAAAgB,sBAAA,SAAsBH,GACpBpB,KAAKC,SAASuB,KAAKJ,IAIrBrB,EAAAQ,UAAAkB,sBAAA,SAAsBL,GACpBvB,cAAAkB,QAAWG,OAAOE,EAASpB,KAAKC,WAEpCF,IAzCA2B,QAAAC,eAAAC,QAAA,cAAAC,OAAA","file":"keyboard-input.js","sourcesContent":["import KeyboardMapping from './keyboard-mapping'\nimport ArrayUtils from './../util/array-utils'\n\nexport default class KeyboardController {\n\n  private mappings: Array<KeyboardMapping> = [];\n  private downKeys: Array<string> = [];\n  private hasDownHandler: boolean = false;\n  private hasUpHandler: boolean = false;\n  private hasWhileDownHandler: boolean = false;\n  private hasPressHandler: boolean = false;\n\n  bind(): void {\n    window.addEventListener(\"keydown\", this.keyDown);\n    window.addEventListener(\"keyup\", this.keyUp);\n    window.addEventListener(\"keypress\", this.keyPress);\n  }\n\n  keyDown(event: KeyboardEvent): void {\n    ArrayUtils.addToSet(event.key, this.downKeys);\n  }\n\n  keyUp(event: KeyboardEvent): void {\n    ArrayUtils.remove(event.key, this.downKeys);\n  }\n\n  keyPress(event: KeyboardEvent): void {\n    this.mappings.forEach((mapping) => {\n      mapping.handlePress(event.key);\n    });\n  }\n\n  update() {\n\n  }\n\n  attachKeyboardMapping(mapping: KeyboardMapping): void {\n    this.mappings.push(mapping);\n\n  }\n\n  removeKeyboardMapping(mapping: KeyboardMapping): void {\n    ArrayUtils.remove(mapping, this.mappings);\n  }\n}"]}