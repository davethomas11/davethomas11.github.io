{"version":3,"sources":["engine/util/array-utils.ts"],"names":["ArrayUtils","remove","object","array","index","indexOf","splice","addToSet","push","getByType","type","forEach","e","constructor","name","Object","defineProperty","exports","value"],"mappings":"YAAA,IAAAA,YAAA,WAAA,QAAAA,MA4BA,MA1BSA,GAAAC,OAAP,SAAmBC,EAAUC,GAC3B,GAAIC,GAAQD,EAAME,QAAQH,EAC1B,OAAIE,KAAS,IACXD,EAAMG,OAAOF,EAAO,IACb,IAKJJ,EAAAO,SAAP,SAAqBL,EAAUC,GAC7B,GAAIC,GAAQD,EAAME,QAAQH,EAC1B,OAAIE,KAAS,IACXD,EAAMK,KAAKN,IACJ,IAKJF,EAAAS,UAAP,SAAsBC,EAAWP,GAC/B,GAAID,GAAmB,IAKvB,OAJAC,GAAMQ,QAAQ,SAACC,GACHA,EAAGC,YAAYC,MAAQJ,EAAKI,OAAMZ,EAASU,KAGhDV,GAEXF,IA5BAe,QAAAC,eAAAC,QAAA,cAAAC,OAAA","file":"array-utils.js","sourcesContent":["export default class ArrayUtils {\n\n  static remove <T> (object:T, array:Array<T>): boolean {\n    let index = array.indexOf(object);\n    if (index != -1) {\n      array.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  static addToSet <T> (object:T, array:Array<T>): boolean {\n    let index = array.indexOf(object);\n    if (index == -1) {\n      array.push(object);\n      return true;\n    }\n    return false;\n  }\n\n  static getByType <T> (type: any, array:Array<T>): T | null {\n    var object: T | null = null;\n    array.forEach((e) => {\n      if ((<any>e).constructor.name == type.name) object = e;\n    });\n\n    return object;\n  }\n}"]}