{"version":3,"sources":["engine/modules/velocity-module.ts"],"names":["module_1","require","number_tools_1","physics_module_1","VelocityModule","_super","maxVelocity","acceleration","deceleration","call","this","ANGLE_OFFSET","velocityX","VelocityDimension","velocityY","_angle","vector","PhysicsType2d","Vector2","maxVelocityX","maxVelocityY","__extends","prototype","update","gameObject","deltaInMs","deltaInSeconds","physicsModule","getModule","PhysicsModule","undefined","x","PhysicsConversions","toMetres","velocity","y","setVelocity","Object","defineProperty","accelerateRight","accelerationX","accelerateLeft","accelerateUp","accelerationY","accelerateDown","decelerateRight","decelerationX","decelerateLeft","decelerateUp","decelerationY","decelerateDown","pixelsPerSecond","calculateAngle","constantAccelerateAtAngleXY","angle","speed","Math","cos","sin","abs","xFactor","yFactor","accelerating","atan2","default","exports","value","_velocity","_acceleration","_accelerating","accelerationChange","maxVel","minVel","clamp"],"mappings":"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","file":"velocity-module.js","sourcesContent":["import Module from './module'\nimport GameObject from '../models/game-object'\nimport NumberTools from '../util/number-tools'\nimport { PhysicsModule, PhysicsConversions } from './physics-module'\n\nexport default class VelocityModule extends Module {\n\n  readonly ANGLE_OFFSET = -1.5708 // negative 90 degeress\n\n  private velocityX: VelocityDimension = new VelocityDimension();\n  private velocityY: VelocityDimension = new VelocityDimension();\n\n  private maxVelocityX: number;\n  private maxVelocityY: number;\n  private acceleration: number;\n  private deceleration: number;\n  private _angle: number = 0;\n  private vector: PhysicsType2d.Vector2 = new PhysicsType2d.Vector2(0,0);\n\n  constructor(maxVelocity: number = 0, acceleration: number = 0, deceleration: number = 0) {\n    super();\n    this.maxVelocityX = maxVelocity;\n    this.maxVelocityY = maxVelocity;\n    this.acceleration = acceleration;\n    this.deceleration = deceleration;\n  }\n\n  update(gameObject: GameObject, deltaInMs: number): void {\n\n    let deltaInSeconds = deltaInMs / 1000;\n    this.velocityX.update(deltaInSeconds, this.maxVelocityX);\n    this.velocityY.update(deltaInSeconds, this.maxVelocityY);\n\n    let physicsModule = gameObject.getModule(PhysicsModule);\n    if (physicsModule != undefined) {\n      this.vector.x = PhysicsConversions.toMetres(this.velocityX.velocity);\n      this.vector.y = PhysicsConversions.toMetres(this.velocityY.velocity);\n      (physicsModule as PhysicsModule).setVelocity(this.vector);\n    } else {\n      gameObject.x += deltaInSeconds * this.velocityX.velocity;\n      gameObject.y += deltaInSeconds * this.velocityY.velocity;\n    }\n\n    // if (this.velocityX.velocity != 0 || this.velocityY.velocity != 0) {\n    //   this._angle = Math.atan2(this.velocityX.velocity, -this.velocityY.velocity) + this.ANGLE_OFFSET;\n    // }\n  }\n\n  get velX() {\n    return this.velocityX.velocity;\n  }\n\n  get velY() {\n    return this.velocityY.velocity;\n  }\n\n  get angle() {\n    return this._angle;\n  }\n\n  accelerateRight(): void {\n    this.accelerationX = this.acceleration;\n  }\n\n  accelerateLeft(): void {\n    this.accelerationX = -this.acceleration;\n  }\n\n  accelerateUp(): void {\n    this.accelerationY = -this.acceleration;\n  }\n\n  accelerateDown(): void {\n    this.accelerationY = this.acceleration;\n  }\n\n  decelerateRight(): void {\n    this.decelerationX = -this.deceleration;\n  }\n\n  decelerateLeft(): void {\n    this.decelerationX = this.deceleration;\n  }\n\n  decelerateUp(): void {\n    this.decelerationY = this.deceleration;\n  }\n\n  decelerateDown(): void {\n    this.decelerationY = -this.deceleration;\n  }\n\n  set accelerationX(pixelsPerSecond: number) {\n    this.velocityX.acceleration = pixelsPerSecond;\n    this.calculateAngle();\n  }\n\n  set accelerationY(pixelsPerSecond: number) {\n    this.velocityY.acceleration = pixelsPerSecond;\n    this.calculateAngle();\n  }\n\n  set decelerationX(pixelsPerSecond: number) {\n    this.velocityX.deceleration = pixelsPerSecond;\n  }\n\n  set decelerationY(pixelsPerSecond: number) {\n    this.velocityY.deceleration = pixelsPerSecond;\n  }\n\n  constantAccelerateAtAngleXY(acceleration: number, angle: number, speed: number) {\n    this.maxVelocityX = speed * Math.cos(angle);\n    this.maxVelocityY = speed * Math.sin(angle);\n    this.accelerationX = Math.abs(acceleration) * Math.cos(angle);\n    this.accelerationY = Math.abs(acceleration) * Math.sin(angle);\n    this._angle = angle;\n  }\n\n  // TODO: This needs improvement. Angle changes needs to be smoother.\n  private calculateAngle() {\n\n    var xFactor = 0;\n    var yFactor = 0;\n    if (this.velocityX.accelerating && this.velocityY.accelerating) {\n\n      xFactor = this.velocityX.velocity;\n      yFactor = this.velocityY.velocity;\n\n    } else if (this.velocityX.accelerating) {\n\n      xFactor = this.velocityX.acceleration;\n      yFactor = this.velocityY.velocity;\n\n    } else if (this.velocityY.accelerating) {\n\n      xFactor = this.velocityX.velocity;\n      yFactor = this.velocityY.acceleration;\n    }\n\n    this._angle = Math.atan2(xFactor, -yFactor) + this.ANGLE_OFFSET;\n  }\n}\n\nclass VelocityDimension {\n\n  private _velocity: number = 0;\n  private _acceleration: number = 0;\n  private _accelerating: boolean = false;\n\n  get acceleration() {\n    return this._acceleration;\n  }\n\n  get accelerating() {\n    return this._accelerating;\n  }\n\n  set acceleration(pixelsPerSecond: number) {\n    this._accelerating = pixelsPerSecond === 0 ? false : true;\n    this._acceleration = pixelsPerSecond;\n  }\n\n  set deceleration(pixelsPerSecond: number) {\n    if ((this._acceleration > 0 && pixelsPerSecond < 0) ||\n        (this._acceleration < 0 && pixelsPerSecond > 0)) {     \n      this._accelerating = false;\n      this._acceleration = pixelsPerSecond;\n    }\n  }\n\n  get velocity() {\n    return this._velocity;\n  }\n\n  // TODO: Fix floatyness of switching directions\n  // Need to be able to go in oposite direction faster\n  // By apply force in other direction.\n\n  // TODO: Bug sometimes player maintains velocity after\n  // releasing the key. Deceleration does not happen.\n  update(deltaInSeconds: number, maxVelocity: number): void {\n    if (this._acceleration == 0) {\n      this._velocity = 0;\n      return;\n    }\n\n    var accelerationChange = deltaInSeconds * this._acceleration;\n    var maxVel = maxVelocity;\n    var minVel = -maxVelocity;\n\n    if (!this._accelerating) {\n      if (this._velocity > 0) {\n        minVel = 0;\n      } else if (this._velocity < 0) {\n        maxVel = 0;\n      }\n    }\n\n    this._velocity += accelerationChange;\n    this._velocity = NumberTools.clamp(this._velocity, minVel, maxVel);\n\n    if (this._velocity == 0) {\n      this._acceleration = 0;\n      this._accelerating = false;\n    }\n  }\n}"]}